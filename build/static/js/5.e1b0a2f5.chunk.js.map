{"version":3,"sources":["assets/images/placeholder.png","components/sidebar/userSidebar.jsx","components/dashboard-right/dashboard-right.style.js","components/take-scan/take-scan.style.js","components/take-scan/take-scan.component.jsx","components/user-doctor/user-doctor.style.js","components/user-doctor/user-doctor.component.jsx","components/scan-history/scan-history.style.js","components/scan-history/scan-history.component.jsx","components/disease-book/disease-book.style.js","components/disease-book/disease-book.component.jsx","components/feedback/feedback.style.js","components/feedback/feedback.component.jsx","components/dashboard-right/dashboard-right.component.jsx","pages/dashboard/dashboard.jsx","components/button/customButton.jsx","assets/images/google.png","components/navbar/navbar.jsx","assets/images/logo.png","components/footer/footer.jsx"],"names":["module","exports","connect","state","user","auth","email","screen","dashboard","dispatch","selectTakeScan","selectDoctor","selectHistory","selectDiseaseBook","selectFeedback","selection","useEffect","aside","document","querySelectorAll","highlight","querySelector","iconHighlight","childNodes","forEach","el","nodeName","element","style","backgroundColor","color","makeActive","event","target","parentElement","id","className","onClick","DashboardWrapper","styled","section","DashBoardIcon","i","ScanWrapper","div","PreviewContainer","ImageInfo","p","Image","img","Form","form","IconsWrapper","ResultWrapper","ResultLabel","ResultGroup","ResultDisplay","span","ResultLoader","h3","TakeScan","useState","loading","setLoading","lesion","probability","userResults","setUserResults","preview","useRef","upload","info","fileTypes","makeAxiosCall","proxy","base64Image","a","axios","post","file","then","res","console","log","data","result","label","prob","toString","substring","ref","src","Placeholder","alt","method","enctype","htmlFor","type","name","accept","onChange","initialImage","firstChild","removeChild","number","curFile","files","length","appendChild","includes","textContent","size","toFixed","image","createElement","URL","createObjectURL","split","pop","callback","xhttp","XMLHttpRequest","onload","fileReader","FileReader","onloadend","readAsDataURL","response","responseType","open","send","toDataURL","dataURL","UserDoctorWrapper","UserDoctor","HistoryWrapper","ScanLink","goToScan","BookWrapper","DiseaseBook","maxWidth","margin","FeedbackWrapper","Feedback","CustomButton","text","button_type","icon","link","toggle","clickFunction","to","Google","isAuthenticated","logoutUser","dropdownOn","setDropdownOn","collapseTarget","classList","add","remove","exact","Logo","data-toggle","data-target","activeClassName","aria-labelledby","Footer"],"mappings":"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","file":"static/js/5.e1b0a2f5.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/placeholder.3aec8aa3.png\";","import React, {useEffect} from \"react\";\nimport \"./sidebar.style.css\";\nimport {connect} from \"react-redux\";\nimport {\n    selectDiseaseBook,\n    selectDoctor, selectFeedback,\n    selectHistory,\n    selectTakeScan,\n} from \"../../redux/actions\";\n\n\nconst UserSidebar = ({user, screen, selectTakeScan, selectDoctor, selectHistory, selectDiseaseBook, selectFeedback}) => {\n    let selection = '';\n\n\n    useEffect(() => {\n        const aside = document.querySelectorAll('.aside-element');\n        const highlight = document.querySelector(`#${screen}`);\n        let iconHighlight = '';\n\n        const highlightChildren = highlight.childNodes;\n        highlightChildren.forEach(el => el.nodeName === 'I' ? iconHighlight = el : null)\n\n\n        aside.forEach(element => element.style.backgroundColor = 'var(--dark-blue)');\n        aside.forEach(el => el.childNodes.forEach(el => el.nodeName === 'I' ? el.style.color = 'white' : null));\n\n\n        highlight.style.backgroundColor = 'rgb(0, 104, 144)';\n\n        iconHighlight.style.color = 'black';\n\n    })\n\n    const makeActive = (event) => {\n        if (event.target.nodeName === 'P' || event.target.nodeName === 'I'){\n            selection = event.target.parentElement;\n        }else {\n            selection = event.target;\n        }\n\n\n        if(selection.id === 'take-scan'){\n            selectTakeScan();\n        }else if (selection.id === 'my-doctor'){\n            selectDoctor();\n        }else if (selection.id === 'scan-history'){\n            selectHistory();\n        }else if (selection.id === 'disease-book'){\n            selectDiseaseBook();\n        }else if (selection.id === 'feedback'){\n            selectFeedback();\n        }\n    };\n\n\n\n    return (\n        <aside className='main-aside'>\n            <div className=\"head\">\n                <h4 className=\"user\">User</h4>\n                <p>{user}</p>\n            </div>\n            <div className=\"aside-element\" id=\"take-scan\" onClick={makeActive}>\n                <i className=\"fas fa-camera-retro icons\"/>\n                <p className='take-scan'>Take scan</p>\n            </div>\n            <div className=\"aside-element\" id=\"my-doctor\" onClick={makeActive}>\n                <i className=\"fas fa-stethoscope icons\"/>\n                <p className='doctor'>My Doctor</p>\n            </div>\n            <div className=\"aside-element\" id=\"scan-history\" onClick={makeActive}>\n                <i className=\"fas fa-file-medical icons\"/>\n                <p className='history'>Scan history</p>\n            </div>\n            <div className=\"aside-element\" id=\"disease-book\" onClick={makeActive}>\n                <i className=\"fas fa-book-medical icons\"/>\n                <p className='book'>Disease book</p>\n            </div>\n            <div className=\"aside-element\" id=\"feedback\" onClick={makeActive}>\n                <i className=\"fas fa-comment-dots icons\"/>\n                <p className='feedback'>Feedback</p>\n            </div>\n        </aside>\n    )\n};\n\nconst mapStateToProps = state => {\n    return{\n        user: state.auth.user.email,\n        screen: state.dashboard.screen,\n    }\n};\n\nconst mapDispatchToProps = dispatch => ({\n    selectTakeScan : () => dispatch(selectTakeScan),\n    selectDoctor: () => dispatch(selectDoctor),\n    selectHistory: () => dispatch(selectHistory),\n    selectDiseaseBook: () => dispatch (selectDiseaseBook),\n    selectFeedback: () => dispatch (selectFeedback)\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)( UserSidebar);","import styled from \"styled-components\";\n\nexport const DashboardWrapper = styled.section`\nwidth: 100%;\nheight: 100%;\ndisplay: flex;\ntext-align: center;\njustify-content: center;\nalign-items: center;\n`;\n\nexport const DashBoardIcon = styled.i`\nfont-size: 3rem;\nwidth: 100%;\ntext-align: center;\nmargin: 20px auto;\n`;","import styled from \"styled-components\";\n\nexport const ScanWrapper = styled.div`\n    width: 100%;\n    height: 100%;\n`;\n\nexport const PreviewContainer = styled.div`\n    width: 80%;\n    margin: 10px 10% 20px 10%;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    @media only screen and (min-width: 600px){\n        width: 60%;\n        height: 55vh;\n        margin: 87px 20% 20px 20%;\n  }\n    img{\n        width: 100%;\n        object-fit: contain;\n        @media only screen and (min-width: 600px){\n        height: 100%;\n    }\n}\n`;\n\nexport const ImageInfo = styled.p`\n    text-align: center;\n    margin-bottom: 40px;\n`;\nexport const Image = styled.img`\n`;\n\nexport const Form = styled.form``;\n\nexport const IconsWrapper = styled.div`\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    i{\n        font-size: 3rem;\n        cursor: pointer;\n        color: var(--blue);\n    }\n    #uploader:hover{\n        color: var(--dark-blue);\n        position: relative;\n        &::after{\n            content: 'Upload image';\n            position: absolute;\n            left: 0;\n            display: inline-block;\n            font-size: 0.8rem;\n            z-index: 1;\n            top: 110%;\n            color: black;\n            animation: move-out 250ms ease-out both;\n            @keyframes move-out {\n                from {\n                transform: translateY(-25px);\n                opacity : 0;\n                }\n                to {\n                transform: translateY(0);\n                opacity : 1;\n                }\n            }\n        }\n    }\n#scanner:hover{\ncolor: var(--dark-blue);\nposition: relative;\n&::after{\ncontent: 'Scan image';\nposition: absolute;\nleft: 0;\ndisplay: inline-block;\nfont-size: 0.8rem;\nz-index: 1;\ntop: 110%;\ncolor: black;\nanimation: move-out 250ms ease-out both;\n@keyframes move-out {\nfrom {\ntransform: translateY(-25px);\nopacity : 0;\n}\nto {\ntransform: translateY(0);\nopacity : 1;\n}\n}\n}\n}\nlabel{\nmargin-right: 10%;\n}\ninput{\ndisplay: none;\n}\n`;\n\nexport const ResultWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  margin-top: 50px;\n`;\nexport const ResultLabel = styled.p`\n  font-weight: bold;\n  color: var(--blue);\n`;\n\nexport const ResultGroup = styled.div`\n  display: flex;\n`;\n\nexport const ResultDisplay = styled.span`\n  color: black;\n`;\n\nexport const ResultLoader = styled.h3`\n  animation: beat 300ms both alternate infinite ease-in-out;\n  @keyframes beat {\n  from {\n  color: var(--blue);\n  }\n  to {\n  color: var(--dark-blue);\n  }\n  }\n`;","import React, {useRef, useState} from \"react\";\nimport {\n    Form,\n    IconsWrapper,\n    Image,\n    ImageInfo,\n    PreviewContainer, ResultDisplay, ResultGroup,\n    ResultLabel, ResultLoader,\n    ResultWrapper,\n    ScanWrapper\n} from \"./take-scan.style\";\nimport Placeholder from \"../../assets/images/placeholder.png\";\nimport axios from \"axios\";\n\n\nconst TakeScan = () => {\n\n    const [loading, setLoading] = useState(false);\n\n    const [userResults, setUserResults] = useState({\n        lesion: '',\n        probability: '',\n    })\n    let preview = useRef(null);\n    let upload = useRef(null);\n    let info = useRef(null);\n\n    const fileTypes = [\n        \"image/apng\",\n        \"image/bmp\",\n        \"image/gif\",\n        \"image/jpeg\",\n        \"image/pjpeg\",\n        \"image/png\",\n        \"image/svg+xml\",\n        \"image/tiff\",\n        \"image/webp\",\n        \"image/x-icon\"\n    ];\n\n    function validFileType(file) {\n        return fileTypes.includes(file.type);\n    }\n\n    function returnFileSize(number) {\n        if (number < 1024) {\n            return number + 'bytes';\n        } else if (number >= 1024 && number < 1048576) {\n            return (number / 1024).toFixed(1) + 'KB';\n        } else if (number >= 1048576) {\n            return (number / 1048576).toFixed(1) + 'MB';\n        }\n    }\n\n    const updateImageDisplay = () => {\n        const initialImage = preview.firstChild;\n        while (preview.firstChild) {\n            preview.removeChild(preview.firstChild);\n        }\n        let curFile = upload.files;\n        if (curFile.length === 0) {\n            //display initialImage\n            preview.appendChild(initialImage);\n        } else {\n            curFile = curFile[0];\n            if (validFileType(curFile)) {\n                info.textContent = `File name: ${curFile.name}, File size: ${returnFileSize(curFile.size)}`;\n                const image = document.createElement('img');\n                image.src = URL.createObjectURL(curFile);\n                preview.appendChild(image);\n            } else {\n                const image = document.createElement('img');\n                image.src = Placeholder;\n                preview.appendChild(image);\n                info.textContent = `File name: ${curFile.name} is not a valid type, update your selection`;\n            }\n        }\n    }\n\n    const toDataURL = (src, callback) => {\n        const xhttp = new XMLHttpRequest();\n\n        xhttp.onload = () => {\n            const fileReader = new FileReader();\n            fileReader.onloadend = () => {\n                callback(fileReader.result);\n            }\n            fileReader.readAsDataURL(xhttp.response);\n        };\n\n        xhttp.responseType = 'blob';\n        xhttp.open('GET', src, true);\n        xhttp.send();\n    }\n\n    const makeAxiosCall = async (proxy, base64Image) => {\n        try {\n            setLoading(true);\n            await axios.post(proxy + 'http://52.3.246.8/predict', {file: base64Image})\n                .then(res => {\n                    console.log(res.data);\n                    console.log(res.data.result[0].label);\n                    setUserResults({\n                        ...userResults,\n                        lesion: res.data.result[0].label,\n                        probability: res.data.result[0].prob.toString().substring(0, 4)\n                    })\n                });\n            setLoading(false);\n        } catch (e) {\n            console.log(e);\n        }\n    }\n\n\n    const uploadImage = () => {\n        const initialImage = preview.firstChild;\n        //get name of placeholder image\n        const filename = initialImage.src.split(\"/\").pop();\n        //check if it is the placeholder\n        if (filename === 'placeholder.3aec8aa3.png') {\n            info.textContent = 'You must select an image before you can scan';\n            info.style.color = 'red';\n        } else {\n            //set up cors-anywhere headers\n            const proxyurl = \"https://cors-anywhere.herokuapp.com/\";\n            let base64Image = '';\n\n            toDataURL(initialImage.src, (dataURL) => {\n\n                //split base64 results to get only necessary parts\n                base64Image = dataURL.split(',')[1];\n\n                //make an async call\n                makeAxiosCall(proxyurl, base64Image);\n            });\n        }\n    }\n\n\n    return (\n        <ScanWrapper>\n            <PreviewContainer ref={el => preview = el}>\n                <Image src={Placeholder} alt=\"image selected\"/>\n            </PreviewContainer>\n            <ImageInfo ref={el => info = el}>Select the upload icon to upload an image and the scan icon to scan the\n                image</ImageInfo>\n            <Form method=\"post\" enctype=\"multipart/form-data\">\n                <IconsWrapper>\n                    {\n                        loading ? <ResultLoader>Scanning...</ResultLoader> : <> <label htmlFor=\"file\">\n                            <i className=\"fas fa-file-upload\" id='uploader'/>\n                        </label>\n                            <input type=\"file\" id=\"file\" name=\"file\" accept=\".jpg, .jpeg, .png\"\n                                   onChange={updateImageDisplay}\n                                   ref={el => upload = el}/>\n                            <i onClick={uploadImage} className=\"fas fa-search-plus\" id='scanner'/></>\n                    }\n                </IconsWrapper>\n            </Form>\n            <ResultWrapper>\n                <ResultGroup><ResultLabel>Skin\n                    lesion: <ResultDisplay>{userResults.lesion}</ResultDisplay></ResultLabel></ResultGroup>\n                <ResultGroup><ResultLabel>Probability of skin\n                    lesion: <ResultDisplay>{userResults.probability}</ResultDisplay></ResultLabel></ResultGroup>\n            </ResultWrapper>\n        </ScanWrapper>\n    )\n}\nexport default TakeScan;","import styled from \"styled-components\";\n\nexport const UserDoctorWrapper = styled.section`\n`;","import React from 'react';\nimport {UserDoctorWrapper} from \"./user-doctor.style\";\nimport {DashBoardIcon} from \"../dashboard-right/dashboard-right.style\";\n\nconst UserDoctor = () => {\n    return (\n        <UserDoctorWrapper>\n            <DashBoardIcon className=\"fas fa-user-md\"/>\n            <h3>Your connected doctors will appear here</h3>\n        </UserDoctorWrapper>\n    );\n};\n\nexport default UserDoctor;\n","import styled from \"styled-components\";\n\n\nexport const HistoryWrapper = styled.div``;\n\nexport const ScanLink = styled.span`\ntext-decoration: underline;\ncursor: pointer;\ncolor: var(--blue);\n&:hover{\ntext-decoration: none;\ncolor: var(--dark-blue);\n}\n`;","import React from 'react';\nimport {DashBoardIcon} from \"../dashboard-right/dashboard-right.style\";\nimport {HistoryWrapper, ScanLink} from \"./scan-history.style\";\nimport {connect} from \"react-redux\";\nimport {selectTakeScan} from \"../../redux/actions\";\n\nconst ScanHistory = ({goToScan}) => {\n\n    return (\n        <HistoryWrapper>\n            <DashBoardIcon className=\"fas fa-file-medical icons\"/>\n            <h3>You currently haven't made any scan</h3>\n            <h4>Click <ScanLink onClick={goToScan}>here</ScanLink> to scan your skin</h4>\n        </HistoryWrapper>\n    );\n};\n\nconst mapDispatchToProps = dispatch => ({\n    goToScan: () => dispatch(selectTakeScan)\n})\n\n\nfunction mapStateToProps(state) {\n    return state;\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ScanHistory);\n","import styled from \"styled-components\";\n\nexport const BookWrapper = styled.div``;","import React from 'react';\nimport {BookWrapper} from \"./disease-book.style\";\nimport {DashBoardIcon} from \"../dashboard-right/dashboard-right.style\";\n\nconst DiseaseBook = () => {\n    return (\n        <BookWrapper>\n            <DashBoardIcon className=\"fas fa-book-medical icons\"/>\n            <h3 style={{maxWidth: '80%', margin: '0 auto'}}>This feature will enable you search for skin diseases and better understand your condition</h3>\n        </BookWrapper>\n    );\n};\n\nexport default DiseaseBook;\n","import styled from \"styled-components\";\n\n\nexport const FeedbackWrapper = styled.section``;","import React from 'react';\nimport {FeedbackWrapper} from \"./feedback.style\";\nimport {DashBoardIcon} from \"../dashboard-right/dashboard-right.style\";\n\nconst Feedback = () => {\n    return (\n        <FeedbackWrapper>\n            <DashBoardIcon className=\"fas fa-comment-dots icons\"/>\n            <h3>Your feedback is very important to us</h3>\n        </FeedbackWrapper>\n    );\n};\n\nexport default Feedback;\n","import React from 'react';\nimport {DashboardWrapper} from \"./dashboard-right.style\";\nimport {connect} from \"react-redux\";\nimport TakeScan from \"../take-scan/take-scan.component\";\nimport UserDoctor from \"../user-doctor/user-doctor.component\";\nimport ScanHistory from \"../scan-history/scan-history.component\";\nimport DiseaseBook from \"../disease-book/disease-book.component\";\nimport Feedback from \"../feedback/feedback.component\";\n\nconst DashboardRight = ({screen}) => {\n\n    if (screen === 'take-scan'){\n        return (\n            <TakeScan/>\n        )\n    }else if (screen === 'my-doctor'){\n        return (\n            <DashboardWrapper>\n                <UserDoctor/>\n            </DashboardWrapper>\n        )\n    }else if (screen === 'scan-history'){\n        return (\n            <DashboardWrapper>\n                <ScanHistory/>\n            </DashboardWrapper>\n        )\n    }else if (screen === 'disease-book'){\n        return (\n            <DashboardWrapper>\n                <DiseaseBook/>\n            </DashboardWrapper>\n        )\n    }else if (screen === 'feedback'){\n        return (\n            <DashboardWrapper>\n                <Feedback/>\n            </DashboardWrapper>\n        )\n    }\n};\nconst mapStateToProps = state => {\n    return{\n        screen: state.dashboard.screen,\n    }\n};\n\nexport default connect(mapStateToProps)(DashboardRight);\n","import React from \"react\";\nimport \"./dashboard.style.css\";\nimport UserSidebar from \"../../components/sidebar/userSidebar\";\nimport {connect} from \"react-redux\";\nimport DashboardRight from \"../../components/dashboard-right/dashboard-right.component\";\nimport NavBar from \"../../components/navbar/navbar\";\nimport Footer from \"../../components/footer/footer\";\n\n\nconst Dashboard = ({user}) => {\n    return (\n        <>\n            <NavBar/>\n            <div className='main-dashboard'>\n                <div className=\"sidebar\">\n                    <UserSidebar/>\n                    {/*<DoctorSidebar/>*/}\n                </div>\n                <div className=\"dashboard\">\n                    <div className=\"dashboard-header\"><p className=\"user-mail\">{user}</p></div>\n                    <DashboardRight/>\n                </div>\n            </div>\n            <Footer/>\n        </>\n    )\n};\n\nconst mapStateToProps = state => {\n    return {\n        user: state.auth.user.email,\n    }\n};\n\nexport default connect(mapStateToProps)(Dashboard);","import React from \"react\";\nimport \"./customButton.style.css\";\nimport {Link} from \"react-router-dom\";\nimport Google from \"../../assets/images/google.png\";\n\n\nconst CustomButton = ({text, button_type, icon, link, toggle, clickFunction}) => {\n    if (button_type === 'type1') {\n        return <Link to={link}>\n            <button className=\"diagnosify-button\" onClick={toggle}><i className={icon}/>{text}</button>\n        </Link>\n    } else if (button_type === 'type2') {\n        return <Link to={link}>\n            <button className=\"diagnosify-button button2\"><i className={icon}/>{text}</button>\n        </Link>\n    } else if (button_type === 'type3') {\n        return <Link to={link}>\n            <button className=\"diagnosify-button button3\"><i className={icon}/>{text}</button>\n        </Link>\n    } else if (button_type === 'submit') {\n        return <button className=\"diagnosify-button button\">{text}</button>\n    } else if (button_type === 'google') {\n        return <button className=\"diagnosify-button button4\" onClick={clickFunction}><img src={Google} alt=\"google icon\" className='google'\n                                                                 />{text}</button>\n\n    }\n};\nexport default CustomButton;","module.exports = __webpack_public_path__ + \"static/media/google.1b943d72.png\";","import React, {useEffect, useState} from \"react\";\nimport \"./navbar.style.css\";\nimport Logo from \"../../assets/images/logo.png\";\nimport CustomButton from \"../button/customButton\";\nimport {NavLink, Link} from \"react-router-dom\";\nimport {connect} from \"react-redux\";\nimport {logoutUser} from \"../../redux/actions\";\n\n\nconst NavBar = ({logoutUser, isAuthenticated}) => {\n    const [dropdownOn, setDropdownOn] = useState(false);\n\n    const toggle = () => {\n        setDropdownOn(!dropdownOn);\n    };\n\n    useEffect(() => {\n        const collapseTarget = document.querySelector('#menu');\n        const icon = document.querySelector('#icon');\n        if (!dropdownOn) {\n            collapseTarget.classList.remove('show');\n            icon.classList.add('collapsed');\n        } else {\n            collapseTarget.classList.add('show');\n            icon.classList.remove('collapsed');\n        }\n    }, [dropdownOn]);\n\n    const handleLogout = () => {\n        logoutUser();\n    };\n\n    return (\n        <nav className=\"navbar navbar-expand-md navbar-light bg-light fixed-top\">\n            <NavLink to='/' exact={true}><img className=\"navbar-brand\" src={Logo} alt=\"diagnosify_logo\"/></NavLink>\n            <span className=\"navbar-toggler\" data-toggle=\"collapse\" data-target=\"#menu\" id=\"icon\" onClick={toggle}>\n                <span className=\"line line1\"/>\n                <span className=\"line\" id=\"line-two\"/>\n                <span className=\"line\" id=\"line-three\"/>\n            </span>\n            <div id=\"menu\" className=\"menu collapse navbar-collapse\">\n                <ul className=\"navbar-nav\">\n                    <li className=\"nav-item\">\n                        <NavLink activeClassName=\"active-nav\" to=\"/\" exact={true} className=\"nav-link\"\n                                 onClick={toggle}>Home</NavLink>\n                    </li>\n                    <li className=\"dropdown nav-item\">\n                        <span className=\"drop-button nav-link\" data-toggle=\"dropdown\"\n                              data-target=\"service_target\">Services</span>\n                        <div className=\"dropdown-content dropdown-menu\" aria-labelledby=\"service_target\">\n                            <Link to=\"/dashboard\" onClick={toggle}>Scan image</Link>\n                            <Link to=\"/mobile\" onClick={toggle}>Get mobile app</Link>\n                        </div>\n                    </li>\n                    <li className=\"nav-item\">\n                        <NavLink activeClassName=\"active-nav\" to=\"/about\"  className=\"nav-link\"\n                                 onClick={toggle}>About Us</NavLink>\n                    </li>\n                    {\n                        isAuthenticated ? (\n                            <div className=\"logged\">\n                                <li className=\"nav-item\">\n                                    <NavLink activeClassName=\"active-nav\" to='/dashboard' className=\"nav-link\">\n                                        Dashboard\n                                    </NavLink>\n                                </li>\n                                <li className=\"nav-item\">\n                                    <span className=\"nav-link\" onClick={handleLogout}>\n                                        Logout\n                                    </span>\n                                </li>\n                            </div>\n                            ) :\n                            <li className=\"nav-item\">\n                                <span className=\"nav-link\">\n                                    <CustomButton text=\"Get Started\" button_type='type1' link='/welcome'\n                                                  toggle={toggle}/>\n                                </span>\n                            </li>\n                    }\n                </ul>\n            </div>\n        </nav>\n    )\n};\n\nconst mapStateToProps = state => {\n    return {\n        isAuthenticated: state.auth.isAuthenticated,\n    }\n};\n\nconst mapDispatchToProps = dispatch => ({\n    logoutUser: () => dispatch(logoutUser()),\n});\n\n\nexport default connect(mapStateToProps, mapDispatchToProps)(NavBar);\n","module.exports = __webpack_public_path__ + \"static/media/logo.731400f6.png\";","import React from \"react\";\nimport \"./footer.style.css\"\nimport {Link} from \"react-router-dom\";\n\n\nconst Footer = () => {\n    return (\n        <section className=\"footer\">\n            <div className=\"footer-terms\">\n                <p>Copyright &copy; 2020. All rights reserved | Diagnosify Limited\n                </p>\n                <Link to=\"/\"><p className=\"terms\">Terms and conditions</p></Link>\n            </div>\n        </section>\n    )\n};\nexport default Footer;"],"sourceRoot":""}